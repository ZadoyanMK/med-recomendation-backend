version: '3'

services:
  app: &app
    container_name: med_python_container
    build:
      context: .
      dockerfile: ./docker/dev_windows/Dockerfile
    environment:
      - PYTHONUNBUFFERED=1
    volumes:
      - ./src:/src
    ports:
      - 8000:8000
    command: python manage.py runserver 0.0.0.0:8000
    networks:
      - med
    depends_on:
      - postgres
      - rabbitmq
      - celery_worker
    # restart: unless-stopped
  mysql:
    container_name: med_mysql_container
    image: mysql:5.7
    restart: always
    volumes:
      - ./data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_HOST=%
      - MYSQL_DATABASE=med
      - MYSQL_USER=user
      - MYSQL_PASSWORD=adminpass
      - MYSQL_ROOT_PASSWORD=adminpass
    ports:
      - "3306:3306"
    expose:
      - "3306"
    networks:
      - med
    command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']command: ['mysqld', '--character-set-server=utf8mb4', '--collation-server=utf8mb4_unicode_ci']
  # postgres:
  #   container_name: med_postgres_container
  #   image: postgres:11.2
  #   restart: always
  #   environment:
  #     POSTGRES_PASSWORD: adminpassword
  #     PGDATA: /data/postgres
  #   volumes:
  #     - postgres:/data/postgres
  #   ports:
  #     - "5432:5432"
  #   networks:
  #     - med
  # pgadmin:
  #   container_name: med_pgadmin_container
  #   image: dpage/pgadmin4
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@med.com
  #     PGADMIN_DEFAULT_PASSWORD: adminpassword
  #   volumes:
  #     - pgadmin:/root/.pgadmin
  #   ports:
  #     - "5050:80"
  #   networks:
  #     - med
#    restart: unless-stopped
  rabbitmq:
    container_name: med_rabbitmq_container
    hostname: rabbit
    image: rabbitmq:3.6.6-management
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: user
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - med
#    restart: unless-stopped
  celery_worker:
    container_name: med_celery_container
    <<: *app
    command: celery -A main worker --loglevel=info
    ports: []
    networks:
      - med
    depends_on:
      - rabbitmq
      - mysql
    restart: unless-stopped

networks:
  med:
    driver: bridge

volumes:
  mysql:
  postgres:
  pgadmin:
